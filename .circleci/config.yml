version: 2
jobs:
# Database (Can't Seed Data)
    # mongo:
    #     working_directory: ~/SOA2019_Group/api/
    #     docker:
    #         - image: mongo:3.4.4
    #     steps:
    #         - setup_remote_docker:
    #             docker_layer_caching: true
    #         - checkout:
    #             path: ~/SOA2019_Group6
    #         - run:
    #             name: seed Data
    #             command: |
    #                 mongoimport --host mongo --db payang --collection customers --file customers.json
    #                 mongoimport --host mongo --db payang --collection mechanics --file mechanics.json
    #                 mongoimport --host mongo --db notification --collection mechanics --file notification.json
# Customer Service
    customer:
        working_directory: ~/SOA2019_Group6/api/customer/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            # - run:
            #     name: Install Library
            #     command: |
            #         npm install
            # - run:
            #     name: Test Customer Service
            #     command: |
            #         npm test #wait for mongodb
            - run:
                name: Build Docker Customer service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/customer_service .
                    docker push $DOCKER_USERNAME/customer_service
    customer-deploy:
        working_directory: ~/SOA2019_Group6/api/customer/
        docker:
            - image: google/cloud-sdk
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            - add_ssh_keys:
                fingerprints:
                    - "b7:35:a6:4e:9b:0d:6d:d4:78:1e:9a:97:2a:66:6b:be"
            - run:
                name: Config gcloud credentials
                command: |
                    echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
                    gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
                    gcloud auth configure-docker
            - run:
                name: SSH
                command: |
                    gcloud \
                    --quiet \
                    --project="${GCLOUD_PROJECT_ID}" \
                    compute ssh customer-service \
                    --zone asia-southeast1-b\
                    --command "echo works"
# Mechanics Service
    mechanics:
        working_directory: ~/SOA2019_Group6/api/mechanics/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            # - run:
            #     name: Install Library
            #     command: |
            #         npm install
            # - run:
            #     name: Test Mechanics Service
            #     command: |
            #         npm test #wait for mongodb
            - run:
                name: Build Docker mechanics service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/mechanics_service .
                    docker push $DOCKER_USERNAME/mechanics_service
# Request Mechanics Service
    request:
        working_directory: ~/SOA2019_Group6/api/request/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            # - run:
            #     name: Install Library
            #     command: |
            #         npm install
            # - run:
            #     name: Test Request Service
            #     command: |
            #         npm test #wait for mongodb
            - run:
                name: Build Docker request service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/request_service .
                    docker push $DOCKER_USERNAME/request_service
# Authentication Service
    authen:
        working_directory: ~/SOA2019_Group6/api/auth/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            # - run:
            #     name: Install Library
            #     command: |
            #         npm install
            # - run:
            #     name: Test Request Service
            #     command: |
            #         npm test #wait for mongodb
            - run:
                name: Build Docker request service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/authen_service .
                    docker push $DOCKER_USERNAME/authen_service
    service-deploy:
        machine:
            enabled: true
        steps:
            - run:
                name: SSH
                command: |
                    sudo apt-get install sshpass
                    sshpass -p ${SSH_PASS} ssh -v ${SSH_USER}@${SSH_HOST} "cd SOA2019_Group6;docker-compose stop;docker-compose rm -f;docker-compose pull;docker-compose up -d"


workflows:
    version: 2
    complie:
        jobs:
            # - mongo:
            #     filters:
            #         branches:
            #             only:
            #                 - master
            - customer:
                # requires:
                #     - mongo
                filters:
                    branches:
                        only:
                            - master
            - customer-deploy:
                requires:
                    - customer
                filters:
                    branches:
                        only:
                            - master
            - mechanics:
                # requires:
                #     - mongo
                filters:
                    branches:
                        only:
                            - master
            - request:
                # requires:
                #     - mongo
                filters:
                    branches:
                        only:
                            - master
            - authen:
                # requires:
                #     - mongo
                filters:
                    branches:
                        only:
                            - master
            - service-deploy:
                requires:
                    - customer
                    - mechanics
                    - request
                    - authen
                filters:
                    branches:
                        only:
                            - master
            