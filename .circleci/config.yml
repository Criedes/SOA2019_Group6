version: 2
jobs:

# Customer Service
    customer:
        working_directory: ~/SOA2019_Group6/api/customer/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            - run:
                name: Build Docker Customer service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/customer_service:2.0 .
                    docker push $DOCKER_USERNAME/customer_service:2.0

# Mechanics Service
    mechanics:
        working_directory: ~/SOA2019_Group6/api/mechanics/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            - run:
                name: Build Docker mechanics service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/mechanics_service:2.0 .
                    docker push $DOCKER_USERNAME/mechanics_service:2.0

# Request Mechanics Service
    request:
        working_directory: ~/SOA2019_Group6/api/request/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            - run:
                name: Build Docker request service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/request_service:2.0 .
                    docker push $DOCKER_USERNAME/request_service:2.0

# Authentication Service
    authen:
        working_directory: ~/SOA2019_Group6/api/auth/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            - run:
                name: Build Docker request service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/authen_service:2.0 .
                    docker push $DOCKER_USERNAME/authen_service:2.0
# Front-end
    payang_frontend:
        working_directory: ~/SOA2019_Group6/client/
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group6
            - run:
                name: Build Docker request service Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USERNAME/payang_frontend:2.0 .
                    docker push $DOCKER_USERNAME/payang_frontend:2.0
# Deploy Website
    # service-deploy:
    #     machine:
    #         enabled: true
    #     steps:

    #         - run:
    #             name: SSH
    #             command: |                                        
    #                 sudo apt-get install sshpass
    #                 sshpass -p ${SSH_PASS} ssh -v ${SSH_USER}@${SSH_HOST} \
    #                 "ssh -i ${KEY_PATH} ${DEPLOY_USER}@${DEPLOY_HOST} \
    #                 \"cd SOA2019_Group6 && \
    #                 git reset --hard && \
    #                 git pull && \
    #                 sudo docker-compose stop && \
    #                 sudo docker-compose rm -f && \
    #                 sudo docker-compose pull && \
    #                 sudo docker-compose up -d \""

workflows:
    version: 2
    complie:
        jobs:
            - customer:
                filters:
                    branches:
                        only:
                            - master
            - mechanics:
                filters:
                    branches:
                        only:
                            - master
            - request:
                filters:
                    branches:
                        only:
                            - master
            - authen:
                filters:
                    branches:
                        only:
                            - master
            - payang_frontend:
                filters:
                    branches:
                        only:
                            - master
            # - service-deploy:
            #     requires:
            #         - customer
            #         - mechanics
            #         - request
            #         - authen
            #         - payang_frontend
            #     filters:
            #         branches:
            #             only:
            #                 - master
            
