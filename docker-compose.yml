version: '3'
services:
# Customer Service
  customer:
    image: tomtan05/customer_service:1.0
    container_name: customer
    restart: on-failure
    links:
        - mongo
    environment:
      WAIT_HOSTS: mongo:27017
    ports:
      - "3000:3000"
# Mechanics Service
  mechanic:
    image: tomtan05/mechanic_service:1.0
    container_name: mechanic
    restart: on-failure
    links:
        - mongo
    environment:
      WAIT_HOSTS: mongo:27017
    ports:
      - "3001:3000"
# Notification Service
  request:
    image: tomtan05/request_service:1.0
    container_name: request
    restart: on-failure
    links:
        - mongo
    environment:
      WAIT_HOSTS: mongo:27017
    ports:
      - "3002:3000"
# Database
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - '27017:27017'
# Seed data
  mongo-seed-customer:
    container_name: seed-data
    image: mongo
    restart: on-failure
    links:
      - mongo
    volumes:
      - ./api:/seed-data
    environment:
      WAIT_HOSTS: mongo:27017
    command:
      'bash -c "mongoimport --host mongo --db payang --collection customers --file /seed-data/customers.json
      &&
      mongoimport --host mongo --db payang --collection mechanics --file /seed-data/mechanics.json
      &&
      mongoimport --host mongo --db notification --collection mechanics --file /seed-data/notification.json
      "'
# Prometheus
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      volumes:
        - ./etc/prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      ports:
        - '9090:9090'
      restart: always
  node-exporter:
      image: prom/node-exporter:latest
      ports:
        - '9100:9100'
# ApiGateWay
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    ports:
      - "4200:8080"
    volumes:
      - ./etc/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - customer
      - mechanic
      - request
