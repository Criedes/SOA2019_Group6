version: '3.1'
services:
# Customer Service
  customer:
    image: tomtan05/customer_service:2.0
    container_name: customer
    restart: on-failure
    environment:
      WAIT_HOSTS: eureka:8761
      NODE_ENV: 'production'
      EUREKA_CLIENT_HOST: 'customer'
      EUREKA_CLIENT_URL: 'http://customer:'
      EUREKA_SERVER_HOST: 'eureka'
      EUREKA_SERVER_PORT: 8761
    depends_on:
      - eureka
    ports:
      - "3001:3000"
# Mechanics Service
  mechanic:
    image: tomtan05/mechanics_service:2.0
    container_name: mechanic
    restart: on-failure
    environment:
      WAIT_HOSTS: eureka:8761
      NODE_ENV: 'production'
      EUREKA_CLIENT_HOST: 'mechanic'
      EUREKA_CLIENT_URL: 'http://mechanic:'
      EUREKA_SERVER_HOST: 'eureka'
      EUREKA_SERVER_PORT: 8761
    depends_on:
      - eureka
    ports:
      - "3002:3000"
# Notification Service
  request:
    image: tomtan05/request_service:2.0
    container_name: request
    restart: on-failure
    environment:
      WAIT_HOSTS: eureka:8761
      NODE_ENV: 'production'
      EUREKA_CLIENT_HOST: 'request'
      EUREKA_CLIENT_URL: 'http://request:'
      EUREKA_SERVER_HOST: 'eureka'
      EUREKA_SERVER_PORT: 8761
    depends_on:
      - eureka
    ports:
      - "3003:3000"
#Authentication Service
  authen:
    image: tomtan05/authen_service:2.0
    container_name: authen
    restart: on-failure
    environment:
      WAIT_HOSTS: eureka:8761
      NODE_ENV: 'production'
      EUREKA_CLIENT_HOST: 'authen'
      EUREKA_CLIENT_URL: 'http://authen:'
      EUREKA_SERVER_HOST: 'eureka'
      EUREKA_SERVER_PORT: 8761
    depends_on:
      - eureka
    ports:
      - "3004:3000"
#front-end
  payang_frontend:
    image: tomtan05/payang_frontend:2.0
    container_name: payang_frontend
    restart: on-failure
    ports:
     - "3005:3000"
# Prometheus
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      volumes:
        - ./etc/prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      ports:
        - '9090:9090'
      restart: always
# Grafana
  grafana:
    image: grafana/grafana:3.0.0-beta7
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    ports:
      - "3006:3000"
# ApiGateWay
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - customer
      - mechanic
      - request
      - authen
      - payang_frontend
      - eureka
#SSL
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  eureka:
    container_name: eureka
    image: springcloud/eureka
    ports:
      - '8761:8761'